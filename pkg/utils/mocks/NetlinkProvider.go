// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	netlink "github.com/vishvananda/netlink"
)

// NetlinkProvider is an autogenerated mock type for the NetlinkProvider type
type NetlinkProvider struct {
	mock.Mock
}

// GetDevLinkDevice provides a mock function with given fields: pfAddr
func (_m *NetlinkProvider) GetDevLinkDevice(pfAddr string) (*netlink.DevlinkDevice, error) {
	ret := _m.Called(pfAddr)

	var r0 *netlink.DevlinkDevice
	if rf, ok := ret.Get(0).(func(string) *netlink.DevlinkDevice); ok {
		r0 = rf(pfAddr)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*netlink.DevlinkDevice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pfAddr)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDevLinkDeviceEswitchAttrs provides a mock function with given fields: ifName
func (_m *NetlinkProvider) GetDevLinkDeviceEswitchAttrs(ifName string) (*netlink.DevlinkDevEswitchAttr, error) {
	ret := _m.Called(ifName)

	var r0 *netlink.DevlinkDevEswitchAttr
	if rf, ok := ret.Get(0).(func(string) *netlink.DevlinkDevEswitchAttr); ok {
		r0 = rf(ifName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*netlink.DevlinkDevEswitchAttr)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ifName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLinkAttrs provides a mock function with given fields: ifName
func (_m *NetlinkProvider) GetLinkAttrs(ifName string) (*netlink.LinkAttrs, error) {
	ret := _m.Called(ifName)

	var r0 *netlink.LinkAttrs
	if rf, ok := ret.Get(0).(func(string) *netlink.LinkAttrs); ok {
		r0 = rf(ifName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*netlink.LinkAttrs)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ifName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
